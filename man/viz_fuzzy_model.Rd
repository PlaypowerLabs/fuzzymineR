% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/viz_fuzzy_model.R
\name{viz_fuzzy_model}
\alias{viz_fuzzy_model}
\title{Visualize Process Model}
\usage{
viz_fuzzy_model(metrics, node_sig_threshold = 0,
  edge_sig_threshold = 0.4, edge_sig_to_corr_ratio = 0.75,
  preserve_threshold = 0.4, offset_threshold = 0.1,
  node_sig_weights = c(freq = 1, routing = 1), sig_weights = c(freq =
  1, dist = 1), corr_weights = c(prox = 1, end_point = 1, originator = 1,
  data_type = 1, data_value = 1))
}
\arguments{
\item{metrics}{A list of metrics created by mine_fuzzy_model}

\item{node_sig_threshold}{Numeric Value between 0 and 1 which specifies threshold level for preserving nodes in the process model. Nodes having significance value less than this will be either clustered or isolated nodes will be removed from the graph}

\item{edge_sig_threshold}{Numeric Value between 0 and 1 which specifies threshold to filter edges. Edges having local importance less than this threshold will be removed from the process model.}

\item{edge_sig_to_corr_ratio}{Numeric Value between 0  and 1 which specifies the weights for edge significance metrics and edge correlation metrics. Higher the value, more importance is given to the significance metrics.}

\item{preserve_threshold}{Numeric Value between 0 and 1 which is used for removing the conflicting edges.}

\item{offset_threshold}{Numeric Value between 0 and 1 which is used to remove less significant edge in case of conflicting edges or to determine concurrency}

\item{node_sig_weights}{Numeric Vector of length 2. Each value is between 0 and
1 determining the weights given to frequency metric and routing metric respectively.}

\item{sig_weights}{Numeric vector of length 2. Each value between 0 and 1 which
determinesthe weights of freqency binary metric and distance metric respectively.}

\item{corr_weights}{Numeric vector of length 5. Each value between 0 and 1. It represents
weights of proximity, endpoint, originator, data type and data value correlation respectively.}

\item{preserve_threshold}{Numeric Value between 0 and 1 which is used for removing the conflicting edges.}
}
\description{
Takes a metrics mined by mine_fuzzy_model function and a number of other configurable parameters, creates a process model for it.
}
\details{
\emph{\strong{viz_fuzzy_model}} generates a fuzzy process map based
on the configurable parameters that are provided by the user. For creating a
process model, the metrics are aggregated into two types of metrics - \strong{aggregated
node metrics} and \strong{aggregated edge metrics}. These 2 aggregated metrics contain
the weighted sum of the metrics that we provide as input and which were mined by
the function \strong{mine_fuzzy_model}. By default, all the metrics are given equal
weigth but we can change as per your requirments.

For gaining more knowledge about these aggregate metrics and what are
their importance please visit \href{http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.81.1207&rep=rep1&type=pdf}{Fuzzy Mining - Adaptive Process Simplification
Based on Multi-Perspective Metrics}. All detailed description is provided here.
After reading this you will gain insights about how much weights you should
give to each of the metrics given your usage and event data structure.

One of the most powerful feature of this fuzzy process model is that it is
\strong{fully customizable}. We can change the filtering parameters and can get
more simplistic graph which contains only the \strong{most significant} information.
Configurable filtering parameters are - \strong{node_sig_threshold}, \strong{edge_sig_threshold},
\strong{preserve_threshold} and \strong{offset_threshold}.
}
\section{Graph Customization}{

This is the most important feature of fuzzy process model which would not be
possible by other traditional mining algorithms. Simplification of graph takes
place by these 3 steps which are explained in detail so that the user can get
the idea about what filtering parameters they should set so that they get the
desired simplified process model.

\strong{Step 1 : Removing Conflicting Edges}

When there is an edge from A to B and also from B to A then they are said to
be in conflict. Now these conflicting edges can be categorised into - \strong{Concurrent edges},
\strong{One strong Edge and other weak edge}, \strong{length-2 loop}. For this
we have 2 filtering parameters - \strong{preserve threshold} and \strong{offset threshold}.

First we calculate \emph{Relative Significance} for each of the conflicting
edges. This gives us the local significance of that edge with respect to others.
It's mathematical formulation can be given as :

\deqn{rel(A,B)=(sig(A,B))/(2*\sum sig(A,X)) + (sig(A,B))/(2*\sum sig(X,B)) }
\deqn{rel(B,A)=(sig(B,A))/(2*\sum sig(B,X)) + (sig(B,A))/(2*\sum sig(X,A)) }

rel(A,B) gives the local importance of the edge from A to B with respect to
all the outgoing edges from A and all the incoming edges to B. If the value of
rel(A,B) is higher, than the importance of that edge with respect to A and B is more.
Similar reasoning goes with rel(B,A).

\emph{Case 1 :}
If both rel(A,B) and rel(B,A) is \strong{more} than \strong{preserve threshold} than
these edges form a \strong{length-2 loop}.

\deqn{rel(A,B)  \ge preserve_threshold  && rel(B,A) \ge preserve_threshold => length-2 loop }

\emph{Case 2 :}
If one of the edges have relative significance \strong{less} than the \strong{preserve threshold}
and \strong{difference} between both the relative significance is \strong{less} than the \strong{offset
threshold} means that there is concurrency between both the activities. Hence we
remove both the edges.

\emph{Case 3 :}
If one of the edges have relative significance \strong{less} than the \strong{preserve threshold}
and \strong{difference} between both the relative significance is \strong{more} than the \strong{offset
threshold} than we remove the weaker edge(one which has lower relative significance).

\strong{Step 2 : Edge Filtering}

In this step we first calculate relative significance for all the edges and
remove the edges whose \strong{relative significance} is \strong{lower} than
the \strong{edge_sig_threshold} parameter. At last to make sure that the
graph remains connected we revive single edge for the nodes whose all the edges
were removed due to edge filtering.

\strong{Step 3 : Node Filtering and Clustering of nodes}

In this step, we mark the nodes whose \strong{aggregate node significance} is
\strong{less} than the \strong{node_sig_threshold}. We than cluster the nodes
if possible and remove the isolated nodes from the process model. We preserve
the ordering relation of the node that is removed by transitivity.
}

\examples{
\dontrun{
#' library(fuzzymineR)
data("artificial_loan_process")
log <- create_eventlog(artificial_loan_process,
                       case_id = "case",
                       activity_id = "event",
                       timestamp = "completeTime")
metrics <- mine_fuzzy_model(log)
viz_fuzzy_model(metrics = metrics,node_sig_threshold = 0, edge_sig_threshold = 0.3,edge_sig_to_corr_ratio = 0.75)
}

}
\seealso{
\link[fuzzymineR]{create_eventlog}, \link[fuzzymineR]{mine_fuzzy_model}
}
